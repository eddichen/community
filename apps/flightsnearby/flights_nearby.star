"""
Applet: Flights Nearby
Summary: Flights nearby
Description: Find the closest flight to your location.
Author: eddichen
"""

load("cache.star", "cache")
load("encoding/base64.star", "base64")
load("encoding/json.star", "json")
load("http.star", "http")
load("math.star", "math")
load("render.star", "render")
load("schema.star", "schema")
load("secret.star", "secret")

DEFAULT_LOCATION = {
    "lat": "51.4395598",
    "lng": "-0.1013327",
    "description": "London Bridge, London, UK",
    "locality": "London",
    "place_id": "",
    "timezone": "",
}
DEFAULT_DISTANCE = "10"
DEFAULT_CACHE = 180
FLIGHT_RADAR_URL = "https://flight-radar1.p.rapidapi.com/flights/list-in-boundary"
TAILS = {
    "BA": base64.decode("""iVBORw0KGgoAAAANSUhEUgAAAB0AAAAdCAYAAABWk2cPAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFuGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgOS4wLWMwMDAgNzkuMTcxYzI3ZmFiLCAyMDIyLzA4LzE2LTIyOjM1OjQxICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjQuMSAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjMtMDEtMDdUMDk6MDA6MzhaIiB4bXA6TW9kaWZ5RGF0ZT0iMjAyMy0wMS0wOFQwNTo1NDoyOVoiIHhtcDpNZXRhZGF0YURhdGU9IjIwMjMtMDEtMDhUMDU6NTQ6MjlaIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDphZWJiYjY5My1mNTc5LTRkYWMtOTkwNi0zZWIxYTJjMDc0YTEiIHhtcE1NOkRvY3VtZW50SUQ9ImFkb2JlOmRvY2lkOnBob3Rvc2hvcDpjZWFjNWRmMi05NjZjLTI3NDctODNlMC03ZWE4Y2ViNzNlY2EiIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDowZjY4ZDgzNi05MDQyLTQ3ODItYTMwMS0wNjgyNjQ4ZDJmODIiPiA8eG1wTU06SGlzdG9yeT4gPHJkZjpTZXE+IDxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJjcmVhdGVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjBmNjhkODM2LTkwNDItNDc4Mi1hMzAxLTA2ODI2NDhkMmY4MiIgc3RFdnQ6d2hlbj0iMjAyMy0wMS0wN1QwOTowMDozOFoiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCAyNC4xIChNYWNpbnRvc2gpIi8+IDxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJzYXZlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDphZWJiYjY5My1mNTc5LTRkYWMtOTkwNi0zZWIxYTJjMDc0YTEiIHN0RXZ0OndoZW49IjIwMjMtMDEtMDhUMDU6NTQ6MjlaIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b3Nob3AgMjQuMSAoTWFjaW50b3NoKSIgc3RFdnQ6Y2hhbmdlZD0iLyIvPiA8L3JkZjpTZXE+IDwveG1wTU06SGlzdG9yeT4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz4WSeoMAAAFH0lEQVRIia2WaWxUVRTH//e9N0u3ma7TwrS1pXSRsKgEUCSgNBIEE2NcYowowUgUBdQYiGiUiFvULxBiTDSyGMXW0IIgW6B7odgCZam0pOC0zNB9ptusnXl/P7RMBmihpT3J/fDevef+7jn3nHOPIInxipAkiaqqjna9Mm4iADHcPyEEAN3Qp49k8FBiIiwdq0yIpaFiik/QrHlnzaqcnJxsj8erN0YbvfGxsbLL7VIIobV3dblBcsJGtNEYd7qq6l/eRQoLCmonDJg62aw7VVnZSJJut3tYoJOkXq9/fMLc+0d+3ulH58/P6HH2wxgRCQDwVJ+B/0Ql0GBBpFfGr9b6Ko/HUzkhVhYXFVWTpHfIos4/D/LyI0+wDlG8DtAJUIWWOcAsABg38K/CwqNB//nJ2hVreAzgKQheQzovYCqJTJ4w5JTDFI04Y/T4oNu3bdt7kzfQ4uDRWU9yD8AypPM8prEKmTyAVHqkbD4XY15yU+++gV//8tOuIePYWlbF32Nn8GeARzCDZXiQxchkIdLZiSweDs86H6or3U/QfPnW2q3vL1rymvdYOWpe/QA7Fy6Fw25FDGZChQ+9cKEFPYiBG3HQYKu39YtQ/TFXpK9iM77ZpDFt9Di64Ryw4ji8sCINMuyIQB+0iEQAWiQhAtMh0BxraF8qW5L627uCoDGlzLbUWR9tcigbfbgOFSrCkYhMOGDFNTww+1kkLV8Al8mA7DmzkRAfB11YOD59e/Un/fvOEABkRZECfr866jt8w2B+j2I6A5jKbmSzGynsBWiNzGDzrnz2DvjYQVINKQZ9pNecmSFIDr5EYwmkZREJbzpFFr2Yyh4k0QHQAQ37X3ydbGohSbp8jiDM7fKQJD//bPPmIGjoKkne+04XC7GyANihAAgAEEoK5MVzoNuwHkruQgCAs6cVpdXXcbzSgqLSi2h3+JGYoGNfww59Y5PFJwkhqSFPmyJLkgaAP6Cqd9Afmzv3maIt23eEtXUAiUYgKw1YOA9ImhxcY22x48Mte5F34BxgdwJhGkCTiFZL1Y+qw+ITQuhIekP3FUIIoQ4DTJv90KLzxWUlRoMBXgAdAJJD5uuu2JB3sBp79v2Dq5YOTE40QggJbi8gyABu7J7S2dXeLkmSNxAI3LK/MhzQJMS8mlO1JUaDAQDAgQCunmvE9qKLaG7pRuPVJlTXXAJ6JSDaCEUnw2brgiTLMJkz4e+oONLR2dYsyZJyOxAYJk8jhZhWjPCzcxYu16E0/5a5hmttOFx8FnV19TAlxMMYEw9FUaCRJTh6nKioaUJ51X8Qbb897+prK7gdFpTQKNWlTEqv+P6HPiKVfQD7Fiyjv9HCscj6Dd+evFc2YLB/AsJ0usS/y0paSdI79wXaAXYB7FbM5Mff0V52mvWXLtNaf4V0OUeEvrt6xdP3hAKATpKk2pozwTYj0HyDDkTRASMHkMQmgCcRwUOYwp3hM5gXPZOlDz/F+nUb6btQzwGSTv8AK0pKLo0m75GcnJxis9l67zjyOQsZk07CTBtSSaSQSGEDJnEPYrkfOpYDvAADG19aS5J8edXKV0YDVXJzc9c5HHZbXV1dMwdDOSDLsl9JS/a3Ls4Na9q/W5esNbtMASgBNQCfEo62KBN6A/RLHq+213kjNjX/R1dkFLr2HjqYN2LwhIpeq4se0Q0K9Hd1U5hGGo1lt4/7braHOnjBkPJ2U7Rarez3+9XhagAwjmabg6e9Y1NZlhUAehDOkXT/B0kOg5uyFsDsAAAAAElFTkSuQmCC"""),
    "DL": base64.decode("""iVBORw0KGgoAAAANSUhEUgAAAB0AAAAdCAYAAABWk2cPAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFuGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgOS4wLWMwMDAgNzkuMTcxYzI3ZmFiLCAyMDIyLzA4LzE2LTIyOjM1OjQxICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjQuMSAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjMtMDEtMDdUMDk6MDA6MjRaIiB4bXA6TW9kaWZ5RGF0ZT0iMjAyMy0wMS0wOFQxNToyODoxMloiIHhtcDpNZXRhZGF0YURhdGU9IjIwMjMtMDEtMDhUMTU6Mjg6MTJaIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDpmM2ZlYjM0YS01YTNiLTQ0ZDItOGYyNC0wMDRkMzI5OWNhNTIiIHhtcE1NOkRvY3VtZW50SUQ9ImFkb2JlOmRvY2lk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"""),
    "EK": base64.decode("""iVBORw0KGgoAAAANSUhEUgAAAB0AAAAdCAYAAABWk2cPAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFuGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgOS4wLWMwMDAgNzkuMTcxYzI3ZmFiLCAyMDIyLzA4LzE2LTIyOjM1OjQxICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjQuMSAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjMtMDEtMDdUMDk6MDA6MjhaIiB4bXA6TW9kaWZ5RGF0ZT0iMjAyMy0wMS0wOFQxNToyOToyMFoiIHhtcDpNZXRhZGF0YURhdGU9IjIwMjMtMDEtMDhUMTU6Mjk6MjBaIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDplOWI1Y2VjNi1kZTU0LTQ4MjAtOTg0ZS1mNDdlOWUzNmVmZWUiIHhtcE1NOkRvY3VtZW50SUQ9ImFkb2JlOmRvY2lk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"""),
    "MH": base64.decode("""iVBORw0KGgoAAAANSUhEUgAAAB0AAAAdCAYAAABWk2cPAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFuGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgOS4wLWMwMDAgNzkuMTcxYzI3ZmFiLCAyMDIyLzA4LzE2LTIyOjM1OjQxICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjQuMSAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjMtMDEtMDdUMDk6MDE6MjZaIiB4bXA6TW9kaWZ5RGF0ZT0iMjAyMy0wMS0wOFQyMTo0OTo1NVoiIHhtcDpNZXRhZGF0YURhdGU9IjIwMjMtMDEtMDhUMjE6NDk6NTVaIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDpiMTdmYjMwNi05OTUzLTRhNjMtYTA3My00MTE3YmFhMGUyY2MiIHhtcE1NOkRvY3VtZW50SUQ9ImFkb2JlOmRvY2lk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"""),
    "QF": base64.decode("""iVBORw0KGgoAAAANSUhEUgAAAB0AAAAdCAYAAABWk2cPAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFuGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgOS4wLWMwMDAgNzkuMTcxYzI3ZmFiLCAyMDIyLzA4LzE2LTIyOjM1OjQxICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjQuMSAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjMtMDEtMDdUMDk6MDA6NDRaIiB4bXA6TW9kaWZ5RGF0ZT0iMjAyMy0wMS0wOFQxNToyMzozOFoiIHhtcDpNZXRhZGF0YURhdGU9IjIwMjMtMDEtMDhUMTU6MjM6MzhaIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo2Njg3MTdkYy02YWU4LTQ2NWUtOWFhYS1kMDA0M2YwZTg2ZGMiIHhtcE1NOkRvY3VtZW50SUQ9ImFkb2JlOmRvY2lk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"""),
    "QR": base64.decode("""iVBORw0KGgoAAAANSUhEUgAAAB0AAAAdCAYAAABWk2cPAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFuGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgOS4wLWMwMDAgNzkuMTcxYzI3ZmFiLCAyMDIyLzA4LzE2LTIyOjM1OjQxICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjQuMSAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjMtMDEtMDdUMDk6MDA6MjZaIiB4bXA6TW9kaWZ5RGF0ZT0iMjAyMy0wMS0wOFQxNToyNToxNVoiIHhtcDpNZXRhZGF0YURhdGU9IjIwMjMtMDEtMDhUMTU6MjU6MTVaIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDplNmI0YjdiNy0wMjlkLTQwYTQtYTAxYy1iMTkzOTVjY2NiYTciIHhtcE1NOkRvY3VtZW50SUQ9ImFkb2JlOmRvY2lk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"""),
    "Q4": base64.decode("""iVBORw0KGgoAAAANSUhEUgAAAB0AAAAdCAYAAABWk2cPAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFuGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgOS4wLWMwMDAgNzkuMTcxYzI3ZmFiLCAyMDIyLzA4LzE2LTIyOjM1OjQxICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjQuMSAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjMtMDEtMDdUMDk6MDA6MTZaIiB4bXA6TW9kaWZ5RGF0ZT0iMjAyMy0wMS0wOFQxNToyMjoyNFoiIHhtcDpNZXRhZGF0YURhdGU9IjIwMjMtMDEtMDhUMTU6MjI6MjRaIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo4ZGYwZDRhYi1hMjQwLTRhZWUtYWJkZC0wNjQwOTM0MjRmY2IiIHhtcE1NOkRvY3VtZW50SUQ9ImFkb2JlOmRvY2lkOnBob3Rvc2hvcDpiODNmNTQ5OS1hYWM0LTRlNDgtODhmYi03OGQyZjA2YTMzY2QiIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDo2MTAzM2Y5ZS1jZjY1LTQ2ZTQtOWQ5NC0wMzYzOTYwZTYwOGQiPiA8eG1wTU06SGlzdG9yeT4gPHJkZjpTZXE+IDxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJjcmVhdGVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjYxMDMzZjllLWNmNjUtNDZlNC05ZDk0LTAzNjM5NjBlNjA4ZCIgc3RFdnQ6d2hlbj0iMjAyMy0wMS0wN1QwOTowMDoxNloiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCAyNC4xIChNYWNpbnRvc2gpIi8+IDxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJzYXZlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDo4ZGYwZDRhYi1hMjQwLTRhZWUtYWJkZC0wNjQwOTM0MjRmY2IiIHN0RXZ0OndoZW49IjIwMjMtMDEtMDhUMTU6MjI6MjRaIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b3Nob3AgMjQuMSAoTWFjaW50b3NoKSIgc3RFdnQ6Y2hhbmdlZD0iLyIvPiA8L3JkZjpTZXE+IDwveG1wTU06SGlzdG9yeT4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz6Bzd75AAACn0lEQVRIibXWTUgUYRgH8Od9d2bUiVXHWtMOu4SxkBEYHRNzo4PkyVKCoEPRscUN7OTSqbsSnrwo3rrkHgw0/IBgx6DLBtFpD5tKSJIyu7bbzOzMv0uGxs7HjtsDc5vn+b1/Znh5GADyKkmSGBGRYRjeL/so5gcNPJyxEBExIrJwDPqvqFMJjR4oy7L4fGLice+V3ni5XBbaWtuMSGekqVyuSJZlCdtbW78IQMOe1nD4bDab/QKXymQyuYaBbe3tzZuqmncDTdOELMs3Goaura99cgMBYHZ2VgVADQFXV1c/eoEAcKmn52pD0Pm5uRU/4PLy8vujnlOBMzMzb/yAAHArkbh9ajQ9OTkPALZtu2K2bUNV1dzx3kBgMvl0GgAsy/KVcnho6N6p0NT4+Etf0p/K5/O7/86oC3yWSk3UAwLA/bGxJ4HRsdHRZL1gsajpnIgDIKmpidWFDgwMPHL6fm4/UjqdflFrnifY39//UNM0R8DpMOVKpcoZEwCQJIp/U3qi1/r6hiuVimOSo4PUOsz01NQrABQKhQTfSaPR6M39/X1X0KkMwzDPdXTEiKi51uyaYDgcvl4oFAIlBICFhYW3Tilroi0tLZc/bG7+9EpjWZYjGo/HT1wGrqgoihez2WzJLR0AVKtVx8O8W1lR3cATqCSK55eWlna9knndtYnBwTu+UCLiXmuGW1mWBdM0sbGx/tkLBEAUi8WiOzs7xaDg8bo7MvLADyokEonk3t7et1wutw3bJiICMWYwxoqlUvF7ofD1sKurK3Shuzum63oERMQ5BwE/dF0/LJZKsqIoZzRN0zOLi6/9bIxMFATFMM2DIOsmY4wBqHtx5pzzg0hnZ31NjDEioiAgEREXBIGqhuG7QeCc2S6YoijMa8ZvYKAw++9NyY4AAAAASUVORK5CYII="""),
    "TG": base64.decode("""iVBORw0KGgoAAAANSUhEUgAAAB0AAAAdCAYAAABWk2cPAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFuGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgOS4wLWMwMDAgNzkuMTcxYzI3ZmFiLCAyMDIyLzA4LzE2LTIyOjM1OjQxICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjQuMSAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjMtMDEtMDdUMDk6MDE6MTJaIiB4bXA6TW9kaWZ5RGF0ZT0iMjAyMy0wMS0wOFQyMTo1MDo0NloiIHhtcDpNZXRhZGF0YURhdGU9IjIwMjMtMDEtMDhUMjE6NTA6NDZaIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDpjNjA4Y2VmZS02NWZkLTQ0NTEtYWUzMC05ZmU3MjE5NmQwNGIiIHhtcE1NOkRvY3VtZW50SUQ9ImFkb2JlOmRvY2lk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"""),
    "SK": base64.decode("""iVBORw0KGgoAAAANSUhEUgAAAB0AAAAdCAYAAABWk2cPAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFuGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgOS4wLWMwMDAgNzkuMTcxYzI3ZmFiLCAyMDIyLzA4LzE2LTIyOjM1OjQxICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjQuMSAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjMtMDEtMDdUMDk6MDI6MDRaIiB4bXA6TW9kaWZ5RGF0ZT0iMjAyMy0wMS0wOFQyMTo1Mzo1NVoiIHhtcDpNZXRhZGF0YURhdGU9IjIwMjMtMDEtMDhUMjE6NTM6NTVaIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo5YTU3NmM0Zi1mNGI2LTQ3MzItYmZmNi0yODU3YzcwOGQ2ZmEiIHhtcE1NOkRvY3VtZW50SUQ9ImFkb2JlOmRvY2lk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"""),
    "SQ": base64.decode("""iVBORw0KGgoAAAANSUhEUgAAAB0AAAAdCAYAAABWk2cPAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFuGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgOS4wLWMwMDAgNzkuMTcxYzI3ZmFiLCAyMDIyLzA4LzE2LTIyOjM1OjQxICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjQuMSAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjMtMDEtMDdUMDk6MDA6NDZaIiB4bXA6TW9kaWZ5RGF0ZT0iMjAyMy0wMS0wOFQxNToyNjozNFoiIHhtcDpNZXRhZGF0YURhdGU9IjIwMjMtMDEtMDhUMTU6MjY6MzRaIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo5YjYzNjU5NC04NGJiLTQ3MTAtYjE5NS1iMTEyNDAzN2IwNDYiIHhtcE1NOkRvY3VtZW50SUQ9ImFkb2JlOmRvY2lk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"""),
    "UA": base64.decode("""iVBORw0KGgoAAAANSUhEUgAAAB0AAAAdCAYAAABWk2cPAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFuGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgOS4wLWMwMDAgNzkuMTcxYzI3ZmFiLCAyMDIyLzA4LzE2LTIyOjM1OjQxICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjQuMSAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjMtMDEtMDdUMDk6MDA6MjZaIiB4bXA6TW9kaWZ5RGF0ZT0iMjAyMy0wMS0wOFQxNToxNzo1NVoiIHhtcDpNZXRhZGF0YURhdGU9IjIwMjMtMDEtMDhUMTU6MTc6NTVaIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDphNWQxYzcyMS1iOTJiLTQzZTgtODRmYy1mMGU2MTllMzY1NTEiIHhtcE1NOkRvY3VtZW50SUQ9ImFkb2JlOmRvY2lk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"""),
    "U2": base64.decode("""iVBORw0KGgoAAAANSUhEUgAAAB0AAAAdCAYAAABWk2cPAAAACXBIWXMAAAsTAAALEwEAmpwYAAAGgmlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgOS4wLWMwMDAgNzkuMTcxYzI3ZmFiLCAyMDIyLzA4LzE2LTIyOjM1OjQxICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjQuMSAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjMtMDEtMDdUMDk6MDA6NDRaIiB4bXA6TW9kaWZ5RGF0ZT0iMjAyMy0wMS0wOFQxNToxOToyOFoiIHhtcDpNZXRhZGF0YURhdGU9IjIwMjMtMDEtMDhUMTU6MTk6MjhaIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDoxMTQ0ZTgwOC1iNDFmLTRjMmMtYWViMC1jOWU3MDQzOTE4Y2QiIHhtcE1NOkRvY3VtZW50SUQ9ImFkb2JlOmRvY2lkOnBob3Rvc2hvcDpmMWMxOWM4Yi05YmEzLTFhNGYtYTgxNi02ZDcwYjQ4MTViOGUiIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDpkOTEwNmFiMC0zOGUwLTRiMWYtOGU3NC0zZGI0NzRjMDhmOWIiPiA8eG1wTU06SGlzdG9yeT4gPHJkZjpTZXE+IDxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJjcmVhdGVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOmQ5MTA2YWIwLTM4ZTAtNGIxZi04ZTc0LTNkYjQ3NGMwOGY5YiIgc3RFdnQ6d2hlbj0iMjAyMy0wMS0wN1QwOTowMDo0NFoiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCAyNC4xIChNYWNpbnRvc2gpIi8+IDxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJzYXZlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDo5ODU0YjNjZC00OGIwLTQxNTMtOWNmOC05M2FhZWUyYjI4NDEiIHN0RXZ0OndoZW49IjIwMjMtMDEtMDhUMTU6MTk6MjhaIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b3Nob3AgMjQuMSAoTWFjaW50b3NoKSIgc3RFdnQ6Y2hhbmdlZD0iLyIvPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6MTE0NGU4MDgtYjQxZi00YzJjLWFlYjAtYzllNzA0MzkxOGNkIiBzdEV2dDp3aGVuPSIyMDIzLTAxLTA4VDE1OjE5OjI4WiIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIDI0LjEgKE1hY2ludG9zaCkiIHN0RXZ0OmNoYW5nZWQ9Ii8iLz4gPC9yZGY6U2VxPiA8L3htcE1NOkhpc3Rvcnk+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+T7+kMgAABa1JREFUSIm1lm1sllcZx3/XuV/7vLWl7yDpAGUW7EK3dqMDR0fJNJYtRkmMCSxRMz+4FxNf4gfMzJahMVGzwIxxzo2hxpTNNyCaGbpWusFaIkKoIwGKFrp10Ke0D215nud+O354StPSrhqoV3J/ua9zXb9z/c851zlS4ahiT0xnXUoPd132NItscdu0lKB0EPoToY4AROtF5wAgIlJiSWku0Km8ZijSOj/t+39BFzJzsRMWF5dYO9eqr66KSXM255uGYabLY6YZ+b5EEhrvT5JdVGh13Cn7UxPdLcu8OjxAAAUEgAZK4NC76qRaLGBlMu4caqanpcKre2eA9pfOSdHgOB0EQIAGyI4oHj2pnpiGishtTeC1pqinMemv8vJwZwnGeKBzE3m+cy3Hjg+uc4wk7B0wjo3meHtRNtI7re6J9cX5hrwHToIrp66wZ4lJQ8riy15IJu6Sjjmq7O5O+65/pr3Tty3vr5tjb6wv9xqwwdNc7Rzka71X5a0P8lKTcumJmWRjcco6h+zuE1eyp/NRyG1Bf3Ff/Hfbl2cf6r6kn/3eSVqTNkvaL9FRn9Sitf7G8WHxxz1ccsLPB9Wz04Fa61v6dtU7r+rPidafJXf0AVmrteaHa3iyv5WXj3ySjw5s4enzrehgG7q3xTw5M/aWgDs/EXvea0OHW9F629S3nR6tNT9aQ5v+Avr9T6Fzn0HrHaIfW2lumxk/7zlNWEp5GOL5fniz76k7Y889X5f/uoqAGPSn6TaEquWl1Hbcr9admVRnM5MRCQOcFAwMm5df7Pden5lj1pomHUtc2yoS01LzAZ+pj31rd2N2p5IILCCEUZ/92ZC/9o+wvXdMsp+u5C0TSNqAAbsvyHdvxK9OmYYoS2YdmYRjm4Ybk0xmzL8Z+OhK94l9G/w9ZCOIwAN29cmyFTE9ci2UVY9U6wOuYmWpjdgKxIXx65a3otMqSk9MRk1ltnEio6Mw8PXsSk0dzgfcuDTxpVfrp4B+QZ+zo/JaWw0PPvwRaTo8ov797TPGG9VJxHEK3Q9L+PFF+wfpickI4FQmisLA13PkHZr053SKzTXOjoP3XH9ZVIT2ARP+keankdbP3Vuun7GU7l6b5PFKV/6IIYU+a8NERkUvnc/vAnBNQ3lBMJ3bNExTwhk/ZlpLtdt28N5wX9LW4IOYBejlHL9cWsSln52Xj91fon+ypUJ/vLkkfBgPiIAi4ff/4oXBSd8vdU0rF4Sz1BPXNiWbn1vh8pS76d2WoCvphAVJDRiaYGgox+t3V7N1fIK9fWO0N1fwCi7N+BTGWRBh+Ks7zNr+jD+sdRjcnFvNB6yIOY1d64OupDsFBMKIkeGQPX/PyDe3dBqPvTggtffV8CuEZrIUZAWIQ/tFOXB+LDe0LCZzTgAwtw2allv3l+bwyKqSsLBFdaFKA+xig+LJSL7SMazetE2pVA5NRDODgbzi6XNqL8Dg5PzLNgtakShacXhD1NNYGRbhTwEV6JCuo6M8bmk2/PY9OfZKQ/TCk3dFWxm/KVsM/vaeHD03lj80H+yGSZUjjPqCZdpV7Y3+qbbasIoshQ2hwAs48+YIrcdH1YYym42blujVa8v1QwQY01XKDajwyNtFbQcGJv+8IDQukIo56uBG1XdPSbaO/BSQgqwo0msOWyvSeSO1tcq/Y/e68A8Jm0pyTD9Hxv1Cgzqasfo2d3v1CwEBzKqEubz3Aa+vrEanmADsGTM3AE35/gZ//PQ1f98X7+DzJIiTK0iJKkwwGQBx+M0Zvr/5vxEBc1OV9dRFsYd6zureaGrZRURbBvnMdc++MK5VfZlV3LxUWo+McuHaFRkKDVM7KgoC37eGc1FxqWvmslclfXzE2/8/MKEm4RR/2BUGRmyhKw4c41auxgUSKkGUzOerdZGYKaYhYs3rT5hqIeiiv/AdyzIsImvCD3MfNuY/bKxZ5oxMhXcAAAAASUVORK5CYII="""),
}

# (degrees–>radians)
def deg_to_rad(num):
    return num * (math.pi / 180)

# (radians–>degrees)
def rad_to_deg(num):
    return (180 * num) / math.pi

def get_bounding_box(centrePoint, distance):
    distance = int(distance)
    if distance < 0:
        fail("Distance must be greater than 0")

    # coordinate limits
    MIN_LAT = deg_to_rad(-90)
    MAX_LAT = deg_to_rad(90)
    MIN_LON = deg_to_rad(-180)
    MAX_LON = deg_to_rad(180)

    # earth's radius (km)
    R = 6378.1

    # angular distance in radians on a great circle
    radDist = distance / R

    # centre point coordinates (deg)
    degLat = centrePoint[0]
    degLon = centrePoint[1]

    # centre point coordinates (rad)
    radLat = deg_to_rad(degLat)
    radLon = deg_to_rad(degLon)

    # minimum and maximum latitudes for given distance
    minLat = radLat - radDist
    maxLat = radLat + radDist

    # minimum and maximum longitudes for given distance
    minLon = 0
    maxLon = 0

    # define deltaLon to help determine min and max longitudes
    deltaLon = math.asin(math.sin(radDist) / math.cos(radLat))
    if (minLat > MIN_LAT) and (maxLat < MAX_LAT):
        minLon = radLon - deltaLon
        maxLon = radLon + deltaLon
        if minLon < MIN_LON:
            minLon = minLon + 2 * math.pi
        if maxLon > MAX_LON:
            maxLon = maxLon - 2 * math.pi

        # a pole is within the given distance
    else:
        minLat = math.max(minLat, MIN_LAT)
        maxLat = math.min(maxLat, MAX_LAT)
        minLon = MIN_LON
        maxLon = MAX_LON
    return [
        str(rad_to_deg(minLat)),
        str(rad_to_deg(minLon)),
        str(rad_to_deg(maxLat)),
        str(rad_to_deg(maxLon)),
    ]

def is_key_present(k):
    if k in TAILS:
        return TAILS[k]
    else:
        return TAILS["Q4"]

def main(config):
    api_key = secret.decrypt("AV6+xWcEFKIfCw67zTcYusGXoTGKrc1bOSIdg8X8UuTkEYMbEdcN67Lh1R8PxQUqFf3QxoXI39bIZz0LV8LgL11JY+/uSxEYPlrVMMEqzJMUJngnn9ZW31mmc5Hk9iNnwgfKAZ6YOadc86TTyR3Pyg78hbUfrE2brp3zYWRpsLrfJpxtIlX4UVlHtuC4qF87pQjyeLQ1wHw=")
    location = config.get("location", DEFAULT_LOCATION)

    flight_cached = cache.get("flight")
    if flight_cached != None:
        print("Hit! Displaying cached data.")
        flight = json.decode(flight_cached)
    else:
        print("Miss! Contacting Flight Radar")
        centrePoint = [float(location["lat"]), float(location["lng"])]
        boundingBox = get_bounding_box(centrePoint, config.get("distance", DEFAULT_DISTANCE))
        rep = http.get(
            FLIGHT_RADAR_URL,
            params = {"bl_lat": boundingBox[0], "bl_lng": boundingBox[1], "tr_lat": boundingBox[2], "tr_lng": boundingBox[3]},
            headers = {"X-RapidAPI-Key": config.get("key", api_key), "X-RapidAPI-Host": "flight-radar1.p.rapidapi.com"},
        )
        if rep.status_code != 200:
            fail("Failed to fetch flights with status code:", rep.status_code)

        if rep.json()["aircraft"]:
            flights = rep.json()["aircraft"]
            if flights and len(flights) > 1:
                middle = (len(flights) // 2)
                flight = flights[middle]
            else:
                flight = flights[0]
        else:
            flight = []

        cache.set("flight", json.encode(flight), ttl_seconds = DEFAULT_CACHE)

    if flight:
        origin = flight[12]
        destination = flight[13]
        flightNumber = flight[14]
        aircraftType = flight[9]
        airline = flightNumber[0:2]
        airlineTail = is_key_present(airline)

        print(destination, origin, flightNumber, aircraftType, airline)

        display = render.Row(
            children = [
                render.Box(
                    width = 32,
                    child = render.Image(airlineTail),
                ),
                render.Box(
                    child = render.Column(
                        children = [
                            render.Text("%s" % origin),
                            render.Text("%s" % destination),
                            render.Text("%s" % flightNumber),
                            render.Text("%s" % aircraftType),
                        ],
                    ),
                ),
            ],
        )
    else:
        print("no flights")
        display = render.Box(
            child = render.Marquee(
                width = 64,
                child = render.Text("No flights found nearby"),
            ),
        )

    return render.Root(
        child = display,
    )

def get_schema():
    options = [
        schema.Option(
            display = "1km",
            value = "1",
        ),
        schema.Option(
            display = "5km",
            value = "5",
        ),
        schema.Option(
            display = "10km",
            value = "10",
        ),
    ]

    return schema.Schema(
        version = "1",
        fields = [
            schema.Location(
                id = "location",
                name = "Location",
                desc = "Your current location",
                icon = "locationDot",
            ),
            schema.Dropdown(
                id = "distance",
                name = "Distance",
                desc = "Search distance from your location.",
                icon = "rulerHorizontal",
                default = options[1].value,
                options = options,
            ),
            schema.Text(
                id = "key",
                name = "API key",
                desc = "Flight Radar API key",
                icon = "key",
            ),
        ],
    )
